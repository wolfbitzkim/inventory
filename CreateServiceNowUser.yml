Description: >-
  This script is executed in Management or Designated Member Account where ServiceNow user is creaed.
  At high level it performs below steps.
  1. Create SnowMemberAccountAccessPolicy & SnowMemberAccountAccessGroup.
  2. Create ServicenowUser and add to groups SnowMemberAccountAccessGroup.
AWSTemplateFormatVersion: 2010-09-09
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: User Credentials
        Parameters:
          - SNUserName
      - Label:
          default: Member Account Access Role Details
        Parameters:
          - MbrActRoleName
    ParameterLabels:
      SNUserName:
        default: User Name
      MbrActRoleName:
        default: Member Account Access Role Name
Parameters:
  SNUserName:
    Type: String
    Description: User name for ServiceNow user
    MinLength: 6
    MaxLength: 15
    ConstraintDescription: The username must be between 6 and 15 characters
    Default: NOWSGCUserDev
  MbrActRoleName:
    Type: String
    Description: >-
      Enter the role name you have chosen.
      1. SnowOrganizationAccountAccessRole
      2. OrganizationAccountAccessRole
      3. Your custom role name
    Default: SnowOrganizationAccountAccessRole
Resources:
  SnowMemberAccountAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: SnowMemberAccountAccessPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Resource: !Sub arn:${AWS::Partition}:iam::*:role/${MbrActRoleName}
            Action: sts:AssumeRole
          - Effect: 'Deny'
            Action: '*'
            Resource: '*'
            Condition:
              DateLessThan:
                'aws:CurrentTime': '2024-08-19T00:00:00Z'
          - Effect: 'Deny'
            Action: '*'
            Resource: '*'
            Condition:
              DateGreaterThan:
                'aws:CurrentTime': '2024-09-06T23:59:00Z'
  SnowMemberAccountAccessGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: SnowMemberAccountAccessGroup
      ManagedPolicyArns:
        - !Ref SnowMemberAccountAccessPolicy
      Path: /
    DependsOn: SnowMemberAccountAccessPolicy
  SnowAccountAccessPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: SnowAccountAccessPolicy
      PolicyDocument:
        Statement:
          - Sid: ServiceNowUserReadOnlyAccessOrg
            Effect: Allow
            Action:
              - organizations:DescribeOrganization
              - organizations:ListAccounts
              - organizations:ListRoots
              - organizations:ListAccountsForParent
              - organizations:ListOrganizationalUnitsForParent
              - organizations:DescribeOrganizationalUnit
              - organizations:ListTagsForResource
            Resource: '*'
          - Sid: ServiceNowUserReadOnlyAccessEC2
            Effect: Allow
            Action:
              - ec2:DescribeImages
              - ec2:DescribeRegions
              - ec2:DescribeInstances
              - ec2:DescribeInstanceTypes
            Resource: '*'
          - Sid: PermissionForAWSKeyRotation
            Effect: Allow
            Action:
              - iam:CreateAccessKey
              - iam:DeleteAccessKey
            Resource: '*'
      Groups:
        - !Ref SnowMemberAccountAccessGroup
  CreateServicenowUser:
    Type: AWS::IAM::User
    Properties:
      Path: /
      UserName: !Ref SNUserName
  AddSnowUserToSnowMemberAccountAccessGroup:
    Type: AWS::IAM::UserToGroupAddition
    Properties:
      GroupName: SnowMemberAccountAccessGroup
      Users:
        - !Ref SNUserName
    DependsOn: CreateServicenowUser
Outputs:
  ServiceNowUserARN:
    Description: ARN of ServiceNow user
    Value: !GetAtt
      - CreateServicenowUser
      - Arn
  ServiceNowUser:
    Description: ServiceNow user
    Value: !Ref SNUserName
